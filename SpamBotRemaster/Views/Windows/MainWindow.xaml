<Window x:Class="SpamBotRemaster.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SpamBotRemaster"
        xmlns:elements="clr-namespace:SpamBotRemaster.Infrastructure.CustomElements"
        xmlns:vm="clr-namespace:SpamBotRemaster.ViewModels"
        xmlns:dd="urn:gong-wpf-dragdrop"
        xmlns:converters="clr-namespace:SpamBotRemaster.Infrastructure.Converters"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Title="SpamBotRemake" 
        Icon="/Data/Images/icon.png"
        ResizeMode="NoResize"
        Height="550" Width="500">

    <Window.DataContext>
        <vm:AplicationVM/>
    </Window.DataContext>

    <Window.Resources>

        <converters:ToIntConverter x:Key="Intconverter"/>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

        <Color x:Key="TextBoxBgDarkColor" A="255" R="4" G="4" B="5"  />
        <Color x:Key="TextBoxBgLightColor" A="255" R="12" G="12" B="13" />
        <Color x:Key="TextBoxBgVeryLightColor" A="255" R="32" G="32" B="33" />

        <Color x:Key="StartButtonColor" A="255" R="2" G="130" B="0" />
        <Color x:Key="StartButtonLightColor" A="255" R="3" G="180" B="0" />
        <Color x:Key="StartButtonVeryLightColor" A="255" R="4" G="230" B="0" />

        <Color x:Key="StopButtonColor" A="255" R="130" G="0" B="0" />
        <Color x:Key="StopButtonLightColor" A="255" R="180" G="0" B="0" />
        <Color x:Key="StopButtonVeryLightColor" A="255" R="230" G="0" B="0" />


        <Style TargetType="elements:TextBoxWithPlaceholder" x:Key="StandartTextBoxStyle">

            <Setter Property="Width" Value="300"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="PlaceholderColor" Value="#FF707070"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="TextColor" Value="White"/>
            <Setter Property="Margin" Value="0 4 0 4"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="ToolTipService.InitialShowDelay" Value="1500"/>
            <Setter Property="ToolTipService.ShowDuration" Value="1500"/>
            <Setter Property="CaretBrush" Value="White"/>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="{StaticResource TextBoxBgDarkColor}"/>
                </Setter.Value>
            </Setter>

            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="elements:TextBoxWithPlaceholder">
                        <Grid>
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="3">

                                <Grid>
                                    <TextBlock Text="{TemplateBinding PlaceholderText}"
                                               Visibility="{TemplateBinding PlaceholderVisibility}"
                                               TextWrapping="{TemplateBinding TextWrapping}"
                                               Foreground="{TemplateBinding PlaceholderColor}"
                                               FontStyle="{TemplateBinding FontStyle}"
                                               FontSize="{TemplateBinding FontSize}"
                                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               Background="Transparent"
                                               Padding="5"/>
                                    <TextBox Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
                                             CaretBrush="{TemplateBinding CaretBrush}"
                                             TextWrapping="{TemplateBinding TextWrapping}"
                                             Foreground="{TemplateBinding TextColor}"
                                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                             FontStyle="{TemplateBinding FontStyle}"
                                             FontSize="{TemplateBinding FontSize}"
                                             Background="Transparent"
                                             BorderThickness="0"
                                             Padding="5"/>
                                </Grid>

                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>

                <EventTrigger RoutedEvent="MouseEnter">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard Timeline.DesiredFrameRate="165">
                                <DoubleAnimation Storyboard.TargetProperty="Height" To="33" Duration="0:0:0.1" FillBehavior="HoldEnd"/>
                                <DoubleAnimation Storyboard.TargetProperty="Width" To="330" Duration="0:0:0.1" FillBehavior="HoldEnd"/>
                                <ColorAnimation Storyboard.TargetProperty="Background.Color" To="{StaticResource TextBoxBgLightColor}" Duration="0:0:0.1" FillBehavior="HoldEnd"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>

                <EventTrigger RoutedEvent="MouseLeave">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard Timeline.DesiredFrameRate="165">
                                <DoubleAnimation Storyboard.TargetProperty="Height" To="30" Duration="0:0:0.1" FillBehavior="HoldEnd"/>
                                <DoubleAnimation Storyboard.TargetProperty="Width" To="300" Duration="0:0:0.1" FillBehavior="HoldEnd"/>
                                <ColorAnimation Storyboard.TargetProperty="Background.Color" To="{StaticResource TextBoxBgDarkColor}" Duration="0:0:0.1" FillBehavior="HoldEnd"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="elements:TextBoxWithPlaceholder" BasedOn="{StaticResource StandartTextBoxStyle}" x:Key="BigTextBoxStyle">
            <Style.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard Timeline.DesiredFrameRate="165">
                                <DoubleAnimation Storyboard.TargetProperty="Height" To="183" Duration="0:0:0.1" FillBehavior="HoldEnd"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>

                <EventTrigger RoutedEvent="MouseLeave">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard Timeline.DesiredFrameRate="165">
                                <DoubleAnimation Storyboard.TargetProperty="Height" To="180" Duration="0:0:0.1" FillBehavior="HoldEnd"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Style.Triggers>
        </Style>


        <Style TargetType="Button" x:Key="StartButtonStyle">

            <Setter Property="Height" Value="50"/>
            <Setter Property="Width" Value="130"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="Foreground" Value="White"/>

            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard Timeline.DesiredFrameRate="165">
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:0.1" FillBehavior="HoldEnd"/>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:0.1" FillBehavior="HoldEnd"/>
                            <ColorAnimation Storyboard.TargetProperty="Background.Color"  Duration="0:0:0.1"  To="{StaticResource StartButtonLightColor}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard Timeline.DesiredFrameRate="165">
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.1" FillBehavior="HoldEnd"/>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.1" FillBehavior="HoldEnd"/>
                            <ColorAnimation Storyboard.TargetProperty="Background.Color"  Duration="0:0:0.1" To="{StaticResource StartButtonColor}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="PreviewMouseDown">
                    <BeginStoryboard>
                        <Storyboard Timeline.DesiredFrameRate="165">
                            <ColorAnimation Storyboard.TargetProperty="Background.Color"  Duration="0:0:0.1" To="{StaticResource StartButtonVeryLightColor}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="PreviewMouseUp">
                    <BeginStoryboard>
                        <Storyboard Timeline.DesiredFrameRate="165">
                            <ColorAnimation Storyboard.TargetProperty="Background.Color"  Duration="0:0:0.1" To="{StaticResource StartButtonLightColor}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="StopButtonStyle" BasedOn="{StaticResource StartButtonStyle}">
            <Style.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard Timeline.DesiredFrameRate="165">
                            <ColorAnimation Storyboard.TargetProperty="Background.Color"  Duration="0:0:0.1"  To="{StaticResource StopButtonLightColor}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard Timeline.DesiredFrameRate="165">
                            <ColorAnimation Storyboard.TargetProperty="Background.Color"  Duration="0:0:0.1" To="{StaticResource StopButtonColor}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="PreviewMouseDown">
                    <BeginStoryboard>
                        <Storyboard Timeline.DesiredFrameRate="165">
                            <ColorAnimation Storyboard.TargetProperty="Background.Color"  Duration="0:0:0.1" To="{StaticResource StopButtonVeryLightColor}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="PreviewMouseUp">
                    <BeginStoryboard>
                        <Storyboard Timeline.DesiredFrameRate="165">
                            <ColorAnimation Storyboard.TargetProperty="Background.Color"  Duration="0:0:0.1" To="{StaticResource StopButtonLightColor}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SettingsMenu" TargetType="Grid">
            <Setter Property="Width" Value="200"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="{StaticResource TextBoxBgVeryLightColor}"></SolidColorBrush>
                </Setter.Value>
            </Setter>

                <Setter Property="RenderTransform">
                <Setter.Value>
                    <TranslateTransform X="-200" x:Name="TranslateTransform"/>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSettingsMenuOpen}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="-200" Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        
    </Window.Resources>



    <Grid>
        <Grid.Background>
            <ImageBrush ImageSource="/Data/Images/bg.jpg"/>
        </Grid.Background>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="5*"/>
                <RowDefinition Height="38*"/>
                <RowDefinition Height="6*"/>
                <RowDefinition Height="4*"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="300"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid Column="2">

                <Grid.Background>
                    <SolidColorBrush Color="{StaticResource TextBoxBgDarkColor}"/>
                </Grid.Background>

                <TextBlock
                 Foreground="White"
                 HorizontalAlignment="Center" 
                 VerticalAlignment="Center"
                 FontFamily="Calibri" 
                 FontSize="20" 
                 Text="{Binding CountOfSentMessages, Mode=OneWay, Converter={StaticResource Intconverter}}"/>
            </Grid>


            <StackPanel Grid.ColumnSpan="3" Grid.Row="1" >

                <elements:TextBoxWithPlaceholder Height="30" PlaceholderText="{Binding ProcessNameVM.PlaceholderText}" Style="{StaticResource StandartTextBoxStyle}" 
                                             Text="{Binding ProcessName, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}">
                    <elements:TextBoxWithPlaceholder.ToolTip>
                        <ToolTip Placement="Mouse" Width="150">
                            <TextBlock Text="{Binding ProcessNameVM.ToolTipText}" TextWrapping="Wrap"/>
                        </ToolTip>
                    </elements:TextBoxWithPlaceholder.ToolTip>
                </elements:TextBoxWithPlaceholder>

                <elements:TextBoxWithPlaceholder Height="180" PlaceholderText="{Binding SpamMessageVM.PlaceholderText}" Style="{StaticResource BigTextBoxStyle}" 
                                             Text="{Binding SpamMessageText, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                                             dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding }">

                    <elements:TextBoxWithPlaceholder.ToolTip>
                        <ToolTip Placement="Mouse" Width="150">
                            <TextBlock Text="{Binding SpamMessageVM.ToolTipText}" TextWrapping="Wrap"/>
                        </ToolTip>
                    </elements:TextBoxWithPlaceholder.ToolTip>
                </elements:TextBoxWithPlaceholder>

                <elements:TextBoxWithPlaceholder Height="30" PlaceholderText="{Binding CountOfMessagesVM.PlaceholderText}" Style="{StaticResource StandartTextBoxStyle}" 
                                             Text="{Binding CountOfMessages, Mode=OneWayToSource, Converter={StaticResource Intconverter}, UpdateSourceTrigger=PropertyChanged}" >
                    <elements:TextBoxWithPlaceholder.ToolTip>
                        <ToolTip Placement="Mouse" Width="150">
                            <TextBlock Text="{Binding CountOfMessagesVM.ToolTipText}" TextWrapping="Wrap"/>
                        </ToolTip>
                    </elements:TextBoxWithPlaceholder.ToolTip>
                </elements:TextBoxWithPlaceholder>

                <elements:TextBoxWithPlaceholder Height="30" PlaceholderText="{Binding DelayBeforeSendVM.PlaceholderText}" Style="{StaticResource StandartTextBoxStyle}" 
                                             Text="{Binding DelayBeforeSend, Mode=OneWayToSource, Converter={StaticResource Intconverter}, UpdateSourceTrigger=PropertyChanged}" >
                    <elements:TextBoxWithPlaceholder.ToolTip>
                        <ToolTip Placement="Mouse" Width="150">
                            <TextBlock Text="{Binding DelayBeforeSendVM.ToolTipText}" TextWrapping="Wrap"/>
                        </ToolTip>
                    </elements:TextBoxWithPlaceholder.ToolTip>
                </elements:TextBoxWithPlaceholder>

                <elements:TextBoxWithPlaceholder Height="30" PlaceholderText="{Binding DelayBetweenPasteAndSendVM.PlaceholderText}" Style="{StaticResource StandartTextBoxStyle}" 
                                             Text="{Binding DelayBetweenPasteAndSend, Mode=OneWayToSource, Converter={StaticResource Intconverter}, UpdateSourceTrigger=PropertyChanged}" >
                    <elements:TextBoxWithPlaceholder.ToolTip>
                        <ToolTip Placement="Mouse" Width="150">
                            <TextBlock Text="{Binding DelayBetweenPasteAndSendVM.ToolTipText}" TextWrapping="Wrap" />
                        </ToolTip>
                    </elements:TextBoxWithPlaceholder.ToolTip>
                </elements:TextBoxWithPlaceholder>

            </StackPanel>



            <Grid Grid.Column="1" Grid.Row="2" VerticalAlignment="Top">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Button Style="{StaticResource StartButtonStyle}" Content="{Binding StartSpamButtonText}" HorizontalAlignment="Left" Command="{Binding StartSpamCommand}">
                    <Button.Background>
                        <SolidColorBrush Color="{StaticResource StartButtonColor}"/>
                    </Button.Background>
                </Button>

                <Button Grid.Column="1" Style="{StaticResource StopButtonStyle}" Content="{Binding EndSpamButtonText}" HorizontalAlignment="Right" Command="{Binding EndSpamCommand}">
                    <Button.Background>
                        <SolidColorBrush Color="{StaticResource StopButtonColor}"/>
                    </Button.Background>
                </Button>

            </Grid>
        </Grid>

        
        <Grid>
            <StackPanel Background="Black" Opacity="0.55" Visibility="{Binding IsSettingsMenuOpen, Converter={StaticResource BoolToVisibilityConverter}, Mode=TwoWay}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <i:ChangePropertyAction PropertyName="Visibility" Value="2"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </StackPanel>

            <Grid Style="{StaticResource SettingsMenu}"/>
        </Grid>

        

    </Grid>


</Window>
